apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: eks-pod-identity-agent
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: eks-pod-identity-agent
  template:
    metadata:
      namespace: kube-system
      labels:
        app: eks-pod-identity-agent
    spec:
      hostNetwork: true
      shareProcessNamespace: true
      terminationGracePeriodSeconds: 30
      containers:
        - name: agent-container
          image: <account_id>.dkr.ecr.<region>.amazonaws.com/eks/eks-pod-identity-agent:<version>
          command: ['/go-runner', '/eks-pod-identity-agent', 'server']
          args:
          - '--endpoint'
          - 'https://beta.us-west-2.auth.eks.aws.dev'
          - '-p'
          - '80'
          - '-v'
          - 'trace'
          - '-c'
          - 'some-cluster-name'
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              protocol: TCP
              name: proxy
            - containerPort: 2703
              protocol: TCP
              name: probes-port
          env:
            - name: AWS_REGION
              value: us-west-2
          livenessProbe:
            httpGet:
              host: "localhost"
              path: /healthz
              port: probes-port
            failureThreshold: 1
            periodSeconds: 10
          startupProbe:
            httpGet:
              host: "localhost"
              path: /readyz
              port: probes-port
            failureThreshold: 30
            periodSeconds: 1
          securityContext:
            capabilities:
              add:
                - CAP_NET_BIND_SERVICE
      initContainers:
        - name: agent-initializer
          image: <account_id>.dkr.ecr.<region>.amazonaws.com/eks/eks-pod-identity-agent:<version>
          imagePullPolicy: Always
          command: ['/go-runner', '/eks-pod-identity-agent', 'initialize' ]
          args:
            - '-v'
            - 'trace'
          securityContext:
            privileged: true
