{{- $top := . -}}
{{- range $_, $daemonset := .Values.daemonsets -}}
{{- if $daemonset.create -}}
{{- $valuesDict := dict "nameSuffix" $daemonset.nameSuffix "Values" $top.Values "Release" $top.Release "Chart" $top.Chart -}}
{{- $selectorLabels := include "eks-pod-identity-agent.selectorLabels" $valuesDict -}}
{{- $affinity := default $top.Values.affinity $daemonset.affinity -}}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "eks-pod-identity-agent.fullname" $valuesDict }}
  namespace: {{ $top.Release.Namespace }}
  labels:
    {{- include "eks-pod-identity-agent.labels" $valuesDict | nindent 4}}
spec:
  updateStrategy:
    {{- toYaml $top.Values.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      {{- $selectorLabels | nindent 6 }}
  template:
    metadata:
      labels:
        {{- $selectorLabels | nindent 8 }}
        {{- with $top.Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with $top.Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      priorityClassName: {{ $top.Values.priorityClassName }}
      hostNetwork: true
      terminationGracePeriodSeconds: 30
      {{- with $top.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $top.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $top.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $top.Values.init.create }}
      initContainers:
        - name: {{ $top.Chart.Name }}-init
          image: {{ include "eks-pod-identity-agent.image" $ }}
          imagePullPolicy: {{ $top.Values.image.pullPolicy }}
          command: {{ $top.Values.init.command }}
          {{- if $top.Values.init.additionalArgs }}
          args:
            {{- range $key, $value := $top.Values.init.additionalArgs }}
            - {{ $key | quote }}
            - {{ $value | quote }}
            {{- end }}
          {{- end }}
          securityContext:
            privileged: true
      {{- end }}
      containers:
        - name: {{ $top.Chart.Name }}
          image: {{ include "eks-pod-identity-agent.image" $ }}
          imagePullPolicy: {{ $top.Values.image.pullPolicy }}
          command: {{ $top.Values.agent.command }}
          args:
            - "--port"
            - "80"
            - "--cluster-name"
            - {{ $top.Values.clusterName | quote }}
            - "--probe-port"
            - {{ $top.Values.agent.probePort | quote }}
            {{- if $top.Values.metrics.enabled }}
            - "--metrics-port"
            - {{ $top.Values.metrics.port | quote }}
            {{- end }}
            {{- range $key, $value := $top.Values.agent.additionalArgs }}
            - {{ $key | quote }}
            - {{ $value | quote }}
            {{- end }}
            {{- range $key, $value := $daemonset.additionalArgs }}
            - {{ $key | quote }}
            - {{ $value | quote }}
            {{- end }}
          ports:
            - containerPort: 80
              protocol: TCP
              name: proxy
            - containerPort: {{ $top.Values.agent.probePort }}
              protocol: TCP
              name: probes-port
           {{- if $top.Values.metrics.enabled }}
            - containerPort: {{ $top.Values.metrics.port }}
              protocol: TCP
              name: metrics
            {{- end }}
          env:
          {{- range $key, $value := $top.Values.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          {{- if contains "-iso" $top.Values.env.AWS_REGION }}
          - name: AWS_CA_BUNDLE
            value: /etc/pki/tls/certs/ca-bundle.crt
          {{- end }}
          {{- if or (contains "-iso" $top.Values.env.AWS_REGION) $daemonset.volumeMounts }}
          volumeMounts:
          {{- end }}
          {{- if contains "-iso" $top.Values.env.AWS_REGION }}
          - name: ca-bundle
            mountPath: /etc/pki/tls/certs/ca-bundle.crt
            readOnly: true
          {{- end }}
          {{- if $daemonset.volumeMounts }}
          {{- toYaml $daemonset.volumeMounts | nindent 10}}
          {{- end }}
          securityContext:
            capabilities:
              add:
                - CAP_NET_BIND_SERVICE
            {{- with $daemonset.additionalSecurityContext }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml $top.Values.resources | nindent 12 }}
          {{- if $top.Values.agent.livenessEndpoint }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: localhost
              path: {{ $top.Values.agent.livenessEndpoint }}
              port: probes-port
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 10
          {{- end }}
          {{- if $top.Values.agent.readinessEndpoint }}
          readinessProbe:
            failureThreshold: 30
            httpGet:
              host: localhost
              path: {{ $top.Values.agent.readinessEndpoint }}
              port: probes-port
              scheme: HTTP
            initialDelaySeconds: 1
            timeoutSeconds: 10
          {{- end }}
      {{- if or (contains "-iso" $top.Values.env.AWS_REGION) $daemonset.volumes }}
      volumes:
      {{- end }}
        {{- if contains "-iso" $top.Values.env.AWS_REGION }}
        - name: ca-bundle
          hostPath:
            path: /etc/pki/tls/certs/ca-bundle.crt
            type: File
        {{- end }}
        {{- if $daemonset.volumes }}
        {{- toYaml $daemonset.volumes | nindent 8}}
        {{- end }}
{{ end }}
{{ end }}